@page "/Admin"
@model ISKOpe.Pages.Admin.AdminModel
@{
    Layout = null;
    ViewData["Title"] = "Admin Dashboard";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ISKOpe Admin</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/style.css" />
    <style>
        :root {
            --primary-color: #800000; /* University color */
            --danger-color: #dc3545;
            --danger-hover-color: #c82333;
            --light-bg-color: #f8f9fa;
            --white-color: #fff;
            --dark-text-color: #333;
            --grey-border-color: #888;
            --shadow-light: rgba(0, 0, 0, 0.1);
            --shadow-medium: rgba(0, 0, 0, 0.15);
            --shadow-dark: rgba(0, 0, 0, 0.2);
            --shadow-heavy: rgba(0, 0, 0, 0.19);
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-image: url('/Assets/login_background.png');
            background-size: cover;
            background-repeat: no-repeat;
            background-attachment: fixed;
            min-height: 100vh;
            padding-bottom: 80px; /* Space for the fixed bottom taskbar */
            margin: 0; /* Reset default body margin */
            line-height: 1.5;
            color: var(--dark-text-color);
        }

        .top-navbar {
            background-color: var(--primary-color);
            padding: 10px 20px;
            display: flex;
            justify-content: flex-end;
            align-items: center;
            color: var(--white-color);
            box-shadow: 0 2px 4px var(--shadow-light);
            position: sticky; /* Keeps it at the top when scrolling */
            top: 0;
            z-index: 999;
        }

        .btn {
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1rem;
            transition: background-color 0.2s ease, opacity 0.2s ease;
            text-decoration: none; /* For button-like links */
            display: inline-block; /* For button-like links */
            text-align: center;
        }

        .btn-outline-light {
            background-color: transparent;
            color: var(--white-color);
            border: 1px solid var(--white-color);
        }

            .btn-outline-light:hover {
                background-color: rgba(255, 255, 255, 0.1);
                color: var(--white-color);
            }

        .container {
            background-color: var(--white-color);
            border-radius: 15px;
            box-shadow: 0 8px 16px var(--shadow-medium);
            padding: 40px;
            margin: 30px auto; /* Center the container with auto margins */
            max-width: 1200px; /* Limit max width for better readability */
            width: 90%; /* Responsive width */
        }

        .text-center {
            text-align: center;
        }

        .mb-5 {
            margin-bottom: 3rem; /* Roughly 3 * 16px = 48px */
        }

        h1, h2 {
            color: var(--primary-color);
            font-weight: 700;
            margin-top: 0;
            margin-bottom: 1.5rem;
        }

        .row {
            display: flex; /* Makes items inside flow in a row */
            flex-wrap: wrap; /* Allows columns to wrap to the next line if space is insufficient */
            margin-left: -15px; /* Compensates for the padding on the columns to align content */
            margin-right: -15px; /* Compensates for the padding on the columns to align content */
        }

        .col-md-6 {
            flex: 0 0 50%; /* This is key: It makes each column take up 50% of the row's width */
            max-width: 50%; /* Ensures they don't grow beyond 50% */
            padding-left: 15px; /* Adds space inside the column */
            padding-right: 15px; /* Adds space inside the column */
            box-sizing: border-box; /* Ensures padding is included in the element's total width */
        }

        @@media (max-width: 768px) { /* Media query for smaller screens */
            .col-md-6 {
                flex: 0 0 100%; /* On screens 768px and narrower, make columns take 100% width */
                max-width: 100%;
                margin-bottom: 20px; /* Add space between stacked cards when they are full width */
            }
        }

        .summary-card {
            background-color: var(--light-bg-color);
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08);
            height: 100%; /* Make cards same height */
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

            .summary-card p {
                font-size: 2rem;
                font-weight: bold;
                color: var(--primary-color);
                margin: 10px 0 0; /* Adjust spacing */
            }

            .summary-card h3 {
                margin-bottom: 10px;
                color: var(--dark-text-color); /* Adjust heading color for contrast */
            }

        .table-responsive {
            overflow-x: auto; /* Enable horizontal scrolling for tables on small screens */
        }

        .table {
            width: 100%;
            border-collapse: collapse; /* Remove space between table cells */
            margin-top: 1.5rem;
        }

            .table th,
            .table td {
                padding: 12px 15px;
                border: 1px solid #ddd; /* Light grey border for cells */
                text-align: left;
                vertical-align: middle;
            }

            .table th {
                background-color: var(--primary-color);
                color: var(--white-color);
                font-weight: 600;
                white-space: nowrap; /* Prevent headers from wrapping */
            }

            .table tbody tr:nth-child(even) {
                background-color: #f2f2f2; /* Zebra striping */
            }

            .table tbody tr:hover {
                background-color: #f5f5f5; /* Hover effect */
            }

        .delete-btn {
            background-color: var(--danger-color);
            color: var(--white-color);
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            transition: background-color 0.2s ease;
        }

            .delete-btn:hover {
                background-color: var(--danger-hover-color);
            }

        .d-inline {
            display: inline-block;
        }

        .no-items-admin {
            text-align: center;
            padding: 20px;
            color: #666;
            font-style: italic;
        }

        /* Popup Styles - Correctly hidden by default */
        .popup {
            display: none; /* Changed from 'flex' to 'none' */
            position: fixed;
            z-index: 1001; /* High z-index to be on top */
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
            justify-content: center; /* Still needed for horizontal centering when flexed */
            align-items: center; /* Still needed for vertical centering when flexed */
        }

        .popup-content {
            background-color: var(--white-color);
            margin: auto; /* Center vertically and horizontally */
            padding: 20px;
            border: 1px solid var(--grey-border-color);
            border-radius: 10px;
            width: 80%;
            max-width: 400px;
            text-align: center;
            box-shadow: 0 4px 8px var(--shadow-dark), 0 6px 20px var(--shadow-heavy);
            animation-name: animatetop;
            animation-duration: 0.4s;
        }

        @@keyframes animatetop {
            from {
                top: -300px;
                opacity: 0
            }

            to {
                top: 0;
                opacity: 1
            }
        }

        .popup-content h3 {
            margin-top: 0;
            color: var(--primary-color);
            margin-bottom: 20px;
        }

        .popup-content button {
            background-color: var(--primary-color);
            color: var(--white-color);
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin: 0 10px;
            font-size: 1rem;
        }

            .popup-content button:hover {
                opacity: 0.8;
            }

        /* Adjustments for smaller screens */
        @@media (max-width: 768px) {
            .bottom-taskbar {
                padding: 10px 15px;
                flex-wrap: wrap; /* Allow items to wrap on smaller screens */
                justify-content: space-around; /* Distribute items evenly */
            }

            .taskbar-group-card, .taskbar-search-card, .taskbar-add-card {
                width: 100%;
                justify-content: center;
                margin-bottom: 10px;
            }

            .taskbar-search-card {
                order: 1; /* Place search bar in the middle row */
            }

            .taskbar-group-card {
                order: 2; /* Place navigation pills after search */
            }

            .taskbar-add-card {
                order: 3; /* Place add button last */
                margin-left: 0; /* Remove left margin */
            }

            .taskbar-group-card {
                gap: 10px; /* Reduce gap for smaller screens */
            }
        }
    </style>
</head>
<body>
    <div class="top-navbar">
        <form id="logoutForm" method="post" asp-page-handler="Logout" style="display: none;">
            <button type="submit" class="btn btn-outline-light">Logout</button>
        </form>
        <button type="button" class="btn btn-outline-light" onclick="showLogoutPopup()">Logout</button>
    </div>

    <div class="container">
        <h1 class="text-center mb-5">Admin Dashboard</h1>

        <div class="row mb-5">
            <div class="col-md-6">
                <div class="summary-card">
                    <h3>Total Found Items</h3>
                    <p>@Model.TotalFound</p>
                </div>
            </div>
            <div class="col-md-6">
                <div class="summary-card">
                    <h3>Total Lost Items</h3>
                    <p>@Model.TotalLost</p>
                </div>
            </div>
        </div>

        <div>
            <h2>All Items Overview</h2>

            @if (Model.AllItems.Any())
            {
                <div class="table-responsive">
                    <table class="table table-bordered mt-3">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Status</th>
                                <th>Name</th>
                                <th>Category</th>
                                <th>Date</th>
                                <th>Location</th>
                                <th>Image</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="itemTableBody">
                            @foreach (var item in Model.AllItems)
                            {
                                <tr>
                                    <td>@item.Id</td>
                                    <td>@item.ItemStatus</td>
                                    <td>@item.ItemName</td>
                                    <td>@item.Category</td>
                                    <td>@item.Month @item.Day, @item.Year</td>
                                    <td>@item.Location</td>
                                    <td>
                                        <img src="@(string.IsNullOrEmpty(item.ImagePath) ? "/Assets/placeholder.png" : item.ImagePath)" alt="Item Image" width="50" height="50" style="object-fit:cover; border-radius:3px;" />
                                    </td>
                                    <td>
                                        <form method="post" asp-page-handler="Delete" onsubmit="return confirm('Are you sure you want to delete this item?');" class="d-inline">
                                            <input type="hidden" name="id" value="@item.Id" />
                                            <button type="submit" class="btn btn-sm delete-btn">Delete</button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p class="no-items-admin">No items found in the database.</p>
            }
        </div>
    </div>

    <div id="logoutPopup" class="popup">
        <div class="popup-content">
            <h3>Are you sure you want to log out?</h3>
            <button onclick="logout()">Yes</button>
            <button onclick="closePopup()">No</button>
        </div>
    </div>

    <div class="bottom-taskbar">
        <div class="taskbar-group-card">
            <div class="taskbar-pill home-pill" onclick="location.href='@Url.Page("/Index")'">
                <img src="~/Assets/Home.png" alt="Home" width="32" height="32" />
                <span class="label">Home</span>
            </div>
            <div class="taskbar-pill about-pill" onclick="location.href='@Url.Page("/About")'">
                <img src="~/Assets/About Us.png" alt="About Us" width="32" height="32" />
                <span class="label">About Us</span>
            </div>
            <div class="taskbar-pill profile-pill" onclick="location.href='@Url.Page("/Profile")'">
                <img src="~/Assets/Profile.png" alt="Profile" width="32" height="32" />
                <span class="label">Profile</span>
            </div>
        </div>
        <div class="taskbar-search-card">
            <div class="taskbar-search">
                <button type="button" class="search-btn" aria-label="Search" id="searchButton">
                    <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="#800000" stroke-width="2.2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="11" cy="11" r="7" />
                        <line x1="21" y1="21" x2="16.65" y2="16.65" />
                    </svg>
                </button>
                <input type="text" id="searchInput" class="search-input" placeholder="Search..." autocomplete="off" />
            </div>
        </div>
        <div class="taskbar-add-card">
            <button class="add-btn" aria-label="Add Post" onclick="location.href='@Url.Page("/Submit")'">
                <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="white" stroke-width="2.2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="12" cy="12" r="10" />
                    <line x1="12" y1="8" x2="12" y2="16" />
                    <line x1="8" y1="12" x2="16" y2="12" />
                </svg>
            </button>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/script.js" asp-append-version="true"></script>
    <script src="~/js/taskbar.js" asp-append-version="true"></script>
    <script>
        function showLogoutPopup() {
            document.getElementById('logoutPopup').style.display = 'flex';
        }

        function closePopup() {
            document.getElementById('logoutPopup').style.display = 'none';
        }

        function logout() {
            window.location.href = '/Login';
        }

        window.onclick = function (event) {
            const popup = document.getElementById('logoutPopup');
            if (popup && event.target === popup) {
                closePopup();
            }
        }

        function updateNoItemsMessage() {
            const searchInput = document.getElementById("searchInput");
            const tableRows = document.querySelectorAll(".table tbody tr");
            const noItemsAdminMessage = document.querySelector('.no-items-admin');
            const query = searchInput.value.toLowerCase().trim();
            let visibleRowsCount = 0;

            tableRows.forEach(row => {
                const text = row.innerText.toLowerCase();
                if (text.includes(query)) {
                    row.style.display = '';
                    visibleRowsCount++;
                } else {
                    row.style.display = 'none';
                }
            });

            if (noItemsAdminMessage) {
                if (visibleRowsCount === 0 && tableRows.length > 0) {
                    noItemsAdminMessage.textContent = 'No matching items found.';
                    noItemsAdminMessage.style.display = 'block';
                } else if (tableRows.length === 0 && query === '') {
                    noItemsAdminMessage.textContent = 'No items found in the database.';
                    noItemsAdminMessage.style.display = 'block';
                } else {
                    noItemsAdminMessage.style.display = 'none';
                }
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const searchInput = document.getElementById("searchInput");
            const searchButton = document.getElementById("searchButton");

            searchInput.addEventListener("input", updateNoItemsMessage);
            searchButton.addEventListener("click", updateNoItemsMessage);
        });
    </script>
</body>
</html>
